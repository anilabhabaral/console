{"mappings":"AAeAA,KAAKC,cAAc,kBAEnBD,KAAKE,iBAAiB,WAAW,SAAUC,GACvC,IAAIC,EAAK,IAAIC,QAAQF,EAAEG,KAAKC,UAC5BH,EAAGI,IAAIL,EAAEG,KAAKG,SAASC,KAClBC,MAAK,SAAUC,GAEZT,EAAEG,KAAKG,SAASI,KAAOD,EAAIC,KAC3BT,EAAGU,IAAIX,EAAEG,KAAKG,UACTE,MAAK,SAAUI,GACZC,KAAK,UAAYb,EAAEG,KAAKC,SAAWQ,EAASE,GAChD,IACCC,OAAM,SAAUC,GACbA,EAAM,iBAAmBhB,EAAEG,KAAKC,SAAWJ,EAAEG,KAAKG,SAASC,IAAM,KAAOS,EAC5E,GACR,IACCD,OAAM,WAEHd,EAAGU,IAAIX,EAAEG,KAAKG,UACTE,MAAK,SAAUI,GACZC,KAAK,UAAYb,EAAEG,KAAKC,SAAWQ,EAASE,GAChD,IACCC,OAAM,SAAUC,GACbA,EAAM,iBAAmBhB,EAAEG,KAAKC,SAAWJ,EAAEG,KAAKG,SAASC,IAAM,KAAOS,EAC5E,GACR,GACR,IAAG,GAEHnB,KAAKgB,KAAO,SAAUI,GAElBC,QAAQL,KAAKM,YAAc,mDAAqDF,EACpF,EAEApB,KAAKmB,MAAQ,SAAUC,GAEnBC,QAAQF,MAAMG,YAAc,mDAAqDF,EACrF,EAEApB,KAAKsB,UAAY,WACb,IAAIC,EAAI,IAAIC,KACZ,OAAOD,EAAEE,WAAWC,WAAWC,SAAS,EAAG,KAAO,IAC9CJ,EAAEK,aAAaF,WAAWC,SAAS,EAAG,KAAO,IAC7CJ,EAAEM,aAAaH,WAAWC,SAAS,EAAG,KAAO,IAC7CJ,EAAEO,kBAAkBJ,WAAWC,SAAS,EAAG,IACnD","sources":["src/web/script/worker.js"],"sourcesContent":["/*\n *  Copyright 2022 Red Hat\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nself.importScripts(\"pouchdb.min.js\");\n\nself.addEventListener(\"message\", function (e) {\n    let db = new PouchDB(e.data.database);\n    db.get(e.data.document._id)\n        .then(function (doc) {\n            // update existing document\n            e.data.document._rev = doc._rev;\n            db.put(e.data.document)\n                .then(function (response) {\n                    info(\"Update \" + e.data.database + response.id);\n                })\n                .catch(function (error) {\n                    error(\"Unable to put \" + e.data.database + e.data.document._id + \": \" + error);\n                });\n        })\n        .catch(function () {\n            // put new document\n            db.put(e.data.document)\n                .then(function (response) {\n                    info(\"Insert \" + e.data.database + response.id);\n                })\n                .catch(function (error) {\n                    error(\"Unable to put \" + e.data.database + e.data.document._id + \": \" + error);\n                });\n        });\n}, false);\n\nself.info = function (message) {\n    // use the same log format as HAL\n    console.info(timestamp() + \" INFO  worker.js                                \" + message);\n};\n\nself.error = function (message) {\n    // use the same log format as HAL\n    console.error(timestamp() + \" ERROR worker.js                                \" + message);\n};\n\nself.timestamp = function () {\n    let d = new Date();\n    return d.getHours().toString().padStart(2, \"0\") + \":\" +\n        d.getMinutes().toString().padStart(2, \"0\") + \":\" +\n        d.getSeconds().toString().padStart(2, \"0\") + \".\" +\n        d.getMilliseconds().toString().padStart(3, \"0\");\n}\n"],"names":["self","importScripts","addEventListener","e","db","PouchDB","data","database","get","document","_id","then","doc","_rev","put","response","info","id","catch","error","message","console","timestamp","d","Date","getHours","toString","padStart","getMinutes","getSeconds","getMilliseconds"],"version":3,"file":"worker.aec7d915.js.map"}